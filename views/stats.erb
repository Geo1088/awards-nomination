<script type="text/javascript">
	const data = JSON.parse(<%= JSON.generate(data).inspect %>);
</script>
<div id="app">Loading...</div>
<script type="text/javascript">
fetch('/data/test.json').then(res => {
	return res.json();
}).then(json => {
	document.getElementById('app').innerHTML = `

<div class="section"><div class="container"><div class="content">

<h1>The Game So Far (${Object.keys(data)
	.map(key => data[key])
	.reduce((a, b) => a.concat(b))
	.filter((obj, i, arr) =>
		i === arr.findIndex(s => s.id === obj.id)
	).length} responses)</h1>

<h2>Table of Contents</h2>
<ul>
	<li><a href="#Genres">Genres</a></li>
	<li><a href="#Characters">Characters</a>
		<ul>
			<li><a href="#mscd">Main/Supporting Comedic/Dramatic</a></li>
			<li><a href="#antag">Antagonist</a></li>
			<li><a href="#cast">Overall Cast</a></li>
		</ul>
	</li>
	<li><a href="#Main">Main</a>
		<ul>
			<li><a href="#movie">Best Movie</a></li>
			<li><a href="#short">Best Short</a></li>
			<li><a href="#original">Best Original Anime</a></li>
			<li><a href="#aoty">AOTY</a></li>
		</ul>
	</li>
</ul>

<h2 id="Genres">Genres (${data.genres.length} responses)</h2>

${(function () {
	const noms = {}
	const showsFirst = {}
	for (const response of data.genres.map(response => response.data)) {
		for (const showId in response) {
			const genre = response[showId]
			if (genre == null) continue;
			noms[genre] = noms[genre] || {};
			noms[genre][showId] = (noms[genre][showId] || 0) + 1;
			showsFirst[showId] = showsFirst[showId] || {};
			showsFirst[showId][genre] = noms[genre][showId];
		}
	}
	const showGenres = {};
	for (const showId in showsFirst) {
		showGenres[showId] = {genre: null, totalVotes: 0, genreVotes: 0};
		for (const genre in showsFirst[showId]) {
			const votes = showsFirst[showId][genre];
			if (votes > showGenres[showId].genreVotes) {
				showGenres[showId].genre = genre;
				showGenres[showId].genreVotes = votes;
			}
			showGenres[showId].totalVotes += votes;
		}
	}
	return `
		<table><tbody>
			${Object.keys(noms).sort().map(genreName => {
				const genre = noms[genreName];
				return `
					<tr id="${genreName}">
						<th colspan="3" style="font-size: 2em;">${genreName}</th>
					</tr>
					<tr>
						<th>Show</th>
						<th>Noms this category</th>
						<th>Noms all categories</th>
					</tr>
					${Object.keys(genre).sort((a, b) => genre[b] - genre[a]).map(showId => {
						const show = json.shows.find(show => show.id == showId)
							|| json.opedOnly.find(show => show.id == showId);
						if (!show) return;
						const nomsCount = genre[showId];
						return `
							<tr>
								<th>${show.terms[0]}</th>
								<td>${nomsCount}</td>
								<td>${showGenres[showId].totalVotes}</td>
							</tr>
						`;
					}).join('')}
				`;
			}).join('')}
		</tbody></table>
	`;
})()}

<h2 id="Characters">Characters (${data.characters.length} responses)</h2>

<h3 id="mscd">Main/supporting comedic/dramatic</h3>

${(function () {
	const noms = {}
	const showsFirst = {}
	for (const response of data.characters.map(response => response.data.characters)) {
		for (const showId in response) {
			const genre = response[showId]
			if (genre == null || genre == 'Overall Cast') continue;
			noms[genre] = noms[genre] || {};
			noms[genre][showId] = (noms[genre][showId] || 0) + 1;
			showsFirst[showId] = showsFirst[showId] || {};
			showsFirst[showId][genre] = noms[genre][showId];
		}
	}
	const showGenres = {};
	for (const showId in showsFirst) {
		showGenres[showId] = {genre: null, totalVotes: 0, genreVotes: 0};
		for (const genre in showsFirst[showId]) {
			const votes = showsFirst[showId][genre];
			if (votes > showGenres[showId].genreVotes) {
				showGenres[showId].genre = genre;
				showGenres[showId].genreVotes = votes;
			}
			showGenres[showId].totalVotes += votes;
		}
	}
	return `
		<table><tbody>
			${Object.keys(noms).sort().map(genreName => {
				const genre = noms[genreName];
				return `
					<tr id="${genreName}">
						<th colspan="3" style="font-size: 2em;">${genreName}</th>
					</tr>
					<tr>
						<th>Character</th>
						<th>Noms this category</th>
						<th>Noms all categories</th>
					</tr>
					${Object.keys(genre).sort((a, b) => genre[b] - genre[a]).map(showId => {
						const show = json.characters.find(show => show.id == showId);
						if (!show) return;
						const realShow = json.shows.find(s => s.id === show.show_ids[0])
						if (!realShow) return;
						const nomsCount = genre[showId];
						if (nomsCount == null) return
						return `
							<tr>
								<th>${show.terms[0]} (from ${realShow.terms[0]})</th>
								<td>${nomsCount}</td>
								<td>${showGenres[showId].totalVotes}</td>
							</tr>
						`;
					}).join('')}
				`;
			}).join('')}
		</tbody></table>
	`;
})()}

<h3 id="antag">Antagonist</h3>
<table><tbody>
	<tr>
		<td>Character</td>
		<td>Votes</td>
	</tr>
	${(function () {
		const votes = {};
		for (const response of data.characters.map(res => res.data.antagonists)) {
			for (const show in response) {
				if (!response[show]) continue;
				votes[show] = (votes[show] || 0) + 1;
			}
		}
		console.log(votes);
		return Object.keys(votes).sort((a, b) => votes[b] - votes[a]).map(showId => {
			const show = json.characters.find(show => show.id == showId);
			if (!show) return;
			const realShow = json.shows.find(s => s.id === show.show_ids[0])
			if (!realShow) return;
			const nomsCount = votes[showId];
			if (nomsCount == null) return
			return `
				<tr>
					<th>${show.terms[0]} (from ${realShow.terms[0]})</th>
					<td>${nomsCount}</td>
				</tr>
			`;
		}).join('')
	})()}
</tbody></table>

<h3 id="cast">Overall Cast</h3>
<table><tbody>
	<tr>
		<td>Show</td>
		<td>Votes</td>
	</tr>
	${(function () {
		const votes = {};
		for (const response of data.characters.map(res => res.data.shows)) {
			for (const show in response) {
				if (!response[show]) continue;
				votes[show] = (votes[show] || 0) + 1;
			}
		}
		console.log(votes);
		return Object.keys(votes).sort((a, b) => votes[b] - votes[a]).map(showId => {
			const show = json.shows.find(show => show.id == showId);
			if (!show) return;
			const nomsCount = votes[showId];
			if (nomsCount == null) return
			return `
				<tr>
					<th>${show.terms[0]}</th>
					<td>${nomsCount}</td>
				</tr>
			`;
		}).join('')
	})()}
</tbody></table>

<h2 id="Main">Main</h2>

<h3 id="aoty">AOTY</h3>
<table><tbody>
	<tr>
		<td>Show</td>
		<td>Votes</td>
	</tr>
	${(function () {
		const votes = {};
		for (const response of data.main.map(res => res.data.aoty)) {
			for (const show in response) {
				if (!response[show]) continue;
				votes[show] = (votes[show] || 0) + 1;
			}
		}
		console.log(votes);
		return Object.keys(votes).sort((a, b) => votes[b] - votes[a]).map(showId => {
			const show = json.shows.find(show => show.id == showId);
			if (!show) return;
			const nomsCount = votes[showId];
			if (nomsCount == null) return
			return `
				<tr>
					<th>${show.terms[0]}</th>
					<td>${nomsCount}</td>
				</tr>
			`;
		}).join('')
	})()}
</tbody></table>

</div>
</div>
</div>

`
});
</script>
